var tipuesearch = {"pages":[{"title":"About me","text":"I am researcher studying/modeling climate change impacts on hydrological systems, statistical analysis of hydrological time series, and application of wavelet transformation and copula theory in hydroclimatic analysis. I have recently submitted my Ph.D. Thesis titled \"Analysis and Modeling of Climate Change Impact on Hydrological Extreme Events across India\" (work carried out under the supervision of Prof. Rajib Maity , Department of Civil Engineering, Indian Institute of Technology Kharagpur). Earlier, I have received my B.Tech. degree in Civil Engineering from the National Institute of Technology Hamirpur, India, in 2013, and M.Tech. degree in Hydraulics and Water Resources from Department of Civil Engineering IIT Kharagpur, India, in 2015. More academic details and my list of publication are available in my Curriculum Vitae . Apart from being a researcher, I am also An avid Open Source enthusiast and hence, regular contributor to multiple Open Source project. I am also Arctic Code Vault Contributor for 2020 Github Code Archive Program. More details are available at my github account . A marital artist. I hold First Degree Black Belt (Shodan) in Kyokyushin-kan Karate. Contact me .","tags":"pages","url":"https://mayanksuman.in/pages/about-me.html","loc":"https://mayanksuman.in/pages/about-me.html"},{"title":"Contact","text":"","tags":"pages","url":"https://mayanksuman.in/pages/contact.html","loc":"https://mayanksuman.in/pages/contact.html"},{"title":"Closure Functions","text":"Closure are higher-order functions which return lower-order function (usually first-order function) with its environment. Defining closure functions is possible in languages which has first-class functions like Python, JavaScript, Lua, Scheme, and others. Example 1 2 3 4 5 6 def divisiblity_check ( divisor ): \"\"\"Factory for producing functions that check divisiblity with divisor.\"\"\" def inner_func ( divident ): return ( divident % divisor == 0 ) return inner_func This closure function ( divisiblity_check ) is return another function as evident by syntax. It should be noted that environment for inner function ( i.e. , the variable divisor ) is also saved with the returned function. Hence, following line of codes work: 1 2 3 4 5 6 7 div_by_7 = divisiblity_check ( 7 ) div_by_19 = divisiblity_check ( 19 ) div_by_7 ( 38 ) # return false div_by_19 ( 38 ) # return true div_by_7 ( 35 ) # return true div_by_19 ( 35 ) # return false Here, although the functions div_by_7 and div_by_19 are returned by same closure function; however they have different environment attached to them and hence produce different results. The example closure function ( i.e. , divisiblity_check ) can also be defined using anonymous function. 1 2 3 4 def divisiblity_check ( divisor ): \"\"\"Factory for producing functions that check divisiblity with divisor.\"\"\" return lambda divident : ( divident % divisor == 0 ) This usage is sometimes called anonymous closure function.","tags":"Programming","url":"https://mayanksuman.in/posts/21_May_2021_closure-functions/","loc":"https://mayanksuman.in/posts/21_May_2021_closure-functions/"},{"title":"First Class Functions","text":"In most programming languages, type, object, entity, or value is considered first-class object and hence can be returned from a function, modified or assigned to a variable. If a programming language considers functions as first-class object, then the programming language is said to have first-class functions. Hence, in such programming languages (like Python, JavaScript and others), a function can be assigned to variable, modified or returned from a higher order function. Usually such languages also supports anonymous functions. First-class function is one of the necessity for functional programming; hence all functional programming languages (such as Haskell, Scala, Clojure etc.) have first-class functions. Example 1 2 3 p = print p ( \"Hi! Check out this text.\" ) p . __call__ ( \"Hi! Check out this text.\" ) Here print function is assigned to variable p and then called using syntax p(...) similar to print(...) . It should be noted that the last line is specific to python only. In python almost every thing is a object. Functions are special object that __call__ data structure function (or member) defined for them. This __call__ member function have all the logic for the parent function; hence calling print(...) is same as print.__call__(...) .","tags":"Programming","url":"https://mayanksuman.in/posts/20_May_2021_first-class-functions/","loc":"https://mayanksuman.in/posts/20_May_2021_first-class-functions/"},{"title":"Setting up droidcam and obs-studio cam in Debian","text":"Currently, most of the population is working from home, so having a good video conferencing setup has become important. I have setup droidcam for getting video input from phone/ipad and obs-studio for managing different audio/video source in Debian using the following steps: At first install droidcam in PC using software from here . droidcam should also be installed on phone/ipad using app store. Install obs-studio by the command sudo apt install obs-studio . For using the output of obs-studio into video-conferencing software, obs-v4l2sink should be installed and properly configured. Install v4l2loopback kernel module by sudo apt install v4l2loopback-dkms Install deb file for obs-v4l2sink downloaded from their release page . Make a link for obs-v4l2sink plugin in right folder by sudo ln -s /usr/lib/obs-plugins/v4l2sink.so /usr/lib/x86_64-linux-gnu/obs-plugins/v4l2sink.so Open /etc/modprobe.d/droidcam.conf and edit it so that content looks like 1 2 3 options v4l2loopback_dc width=1280 height=720 card_label=\"Droidcam\" options v4l2loopback width=1280 height=720 devices=1 video_nr=10 card_label=\"obs_studio_cam\" exclusive_caps=1 options snd-aloop enable=1,1 index=3,4 Add v4l2loopback to autoload modules by editing /etc/modules-load.d/droidcam.conf , so that its content is 1 2 3 4 videodev v4l2loopback_dc v4l2loopback snd-aloop Update initramfs by sudo update-initramfs -u . Reboot the system and enjoy video output from obs-studio in your video conferencing session. Update (20/04/2021): Camera functionality is now built into obs-studio 26.1+. Out of box, it works with almost all popular video conferencing systems. However, for skype , please limit the camera output resolution to 1280x720.","tags":"blog","url":"https://mayanksuman.in/posts/30_Jul_2020_setting-up-droidcam-and-obs-studio-cam-in-debian/","loc":"https://mayanksuman.in/posts/30_Jul_2020_setting-up-droidcam-and-obs-studio-cam-in-debian/"}]};